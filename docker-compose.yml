services:
  db:
    image: postgres:16
    restart: unless-stopped
    container_name: postgres
    env_file:
      - ./backend/.env
    volumes:
      - ./backend/pgdata:/var/lib/postgresql/data
    ports:
      - '5432:5432'
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USERNAME}"]
      interval: 5s
      timeout: 3s
      retries: 10
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: project-organizer-api
    env_file:
      - ./backend/.env
    environment:
      DB_HOST: db
      DB_PORT: 5432
    ports:
      - '3001:3001'
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ./backend/src:/app/src
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: project-organizer-client
    ports:
      - "3000:3000"
    env_file:
      - ./frontend/.env
    environment:
      NEXT_PUBLIC_BACKEND_URL: http://localhost:3001
      PORT: 3000

  pgadmin:
    image: dpage/pgadmin4
    restart: unless-stopped
    container_name: nest-pgadmin4
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@admin.com
      - PGADMIN_DEFAULT_PASSWORD=pgadmin4
    ports:
      - '5050:80'
    depends_on:
      - db
    volumes:
    - pgadmin-data:/var/lib/pgadmin

volumes:
  pgadmin-data: