import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import "./globals.css";
import { StoreProvider } from "@/store/root-provider";
import { rootStore } from "@/store/root-store";
import withGuard from "@/components/hoc/with-guard";
import { useEffect } from "react";

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

function RootLayoutBase({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {

  useEffect(() => {
    rootStore.hydrate;
  }, [])

  return (
    <html lang="en">
      <StoreProvider value={rootStore}>
        <body className={`${geistSans.variable} ${geistMono.variable}`}>
          {children}
        </body>
      </StoreProvider>
    </html>
  );
}

const RootLayout = withGuard(RootLayoutBase);
export default RootLayout 